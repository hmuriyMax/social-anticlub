syntax = "proto3";
package social_anti_club;
option go_package = "/user_service";

import "google/api/annotations.proto";
import "user_models.proto";

service UserService {
  rpc Auth(AuthRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/login"
      body: "*"
    };
  }

  rpc Register(RegRequest) returns (RegResponse) {
    option (google.api.http) = {
      post: "/user/register"
      body: "*"
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      post: "/user/get"
      body: "*"
    };
  }

  rpc Search(SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {
      post: "/user/search"
      body: "*"
    };
  }
}

message AuthRequest {
  string login = 1;
  string pass = 2;
}

message AuthResponse {
  LoginInfo user = 2;
}

message RegRequest {
  string pass = 2;
  UserInfo info = 3;
}

message RegResponse {
  enum RegStatus {
    Success = 0; // successful
    InsecurePass = 1; // insecure
    AlreadyExists = 2; // already exists
  }
  RegStatus status = 1;
  string userID = 2;
}

message GetUserRequest {
  string identifier = 1;
}

message GetUserResponse {
  UserInfo user = 1;
  bool is_owner = 2;
}

message SearchRequest {
  string firstName = 1;
  string secondName = 2;
}

message SearchResponse {
  repeated UserInfo users = 1;
}